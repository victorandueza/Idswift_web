"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.compile = void 0;
const zod_1 = require("zod");
const tool_1 = require("../../tool");
const load_1 = require("../../../dataconnect/load");
const compile_1 = require("../../util/dataconnect/compile");
exports.compile = (0, tool_1.tool)({
    name: "build",
    description: "Use this to compile Firebase Data Connect schema, operations, and/or connectors and check for build errors.",
    inputSchema: zod_1.z.object({
        error_filter: zod_1.z
            .enum(["all", "schema", "operations"])
            .describe("filter errors to a specific type only. defaults to `all` if omitted.")
            .optional(),
        service_id: zod_1.z
            .string()
            .optional()
            .describe("The Firebase Data Connect service ID to look for. If omitted, builds all services defined in `firebase.json`."),
    }),
    annotations: {
        title: "Compile Data Connect",
        readOnlyHint: true,
    },
    _meta: {
        requiresProject: false,
        requiresAuth: false,
    },
}, async ({ service_id, error_filter }, { projectId, config }) => {
    const serviceInfo = await (0, load_1.pickService)(projectId, config, service_id || undefined);
    const errors = await (0, compile_1.compileErrors)(serviceInfo.sourceDirectory, error_filter);
    if (errors)
        return {
            content: [
                {
                    type: "text",
                    text: `The following errors were encountered while compiling Data Connect from directory \`${serviceInfo.sourceDirectory}\`:\n\n${errors}`,
                },
            ],
            isError: true,
        };
    return { content: [{ type: "text", text: "Compiled successfully." }] };
});
